{"version":3,"sources":["logo.svg","todolist.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoListComponent","state","addTask","toDoListItems","addToDoTask","alert","listArr","push","taskName","completed","setState","getToDo","getData","taskDelete","index","window","confirm","splice","taskComplete","className","this","length","type","onChange","e","target","value","placeholder","onClick","map","i","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,uDCyFAA,E,4MArFXC,MAAQ,CACJC,QAAU,GACVC,cAAgB,I,EAEnBC,YAAc,WAEX,GAA0B,KAAvB,EAAKH,MAAMC,QAEVG,MAAM,yBAGV,CAEI,IAAIC,EAAO,YAAO,EAAKL,MAAME,eAC7BG,EAAQC,KAAK,CAACC,SAAW,EAAKP,MAAMC,QAASO,WAAY,IAEzD,EAAKC,SAAS,CACVP,cAAgBG,M,EAK3BK,QAAU,SAACC,GAEP,EAAKF,SAAS,CACVR,QAAUU,K,EAGlBC,WAAa,SAACC,GAGX,GADmBC,OAAOC,QAAQ,qCAClB,CACZ,IAAIV,EAAO,YAAO,EAAKL,MAAME,eAC7BG,EAAQW,OAAOH,EAAM,GACrB,EAAKJ,SAAS,CACdP,cAAgBG,M,EAIvBY,aAAe,SAACJ,GAGb,IAAIR,EAAO,YAAO,EAAKL,MAAME,eAC7BG,EAAQQ,GAAOL,WAAaH,EAAQQ,GAAOL,UAI3C,EAAKC,SAAS,CACVP,cAAgBG,K,4CAKxB,WAAU,IAAD,OACL,OACI,sBAAKa,UAAU,gBAAf,UACI,sBAAKA,UAAU,YAAf,yBAGMC,KAAKnB,MAAME,cAAckB,OAH/B,OAOA,sBAAKF,UAAU,YAAf,UACI,uBAAOG,KAAK,OAAQH,UAAU,YAAYI,SAAU,SAAAC,GAAC,OAAI,EAAKb,QAAQa,EAAEC,OAAOC,QAAQC,YAAY,gBACnG,uBAAOL,KAAK,SAASH,UAAU,cAAcS,QAASR,KAAKhB,YAAasB,MAAM,WAElF,qBAAKP,UAAU,gBAAf,SACKC,KAAKnB,MAAME,cAAc0B,KAAI,SAACL,EAAEM,GAAH,OAE9B,sBAAaX,UAAU,OAAvB,UACM,sBAAMA,UAAWK,EAAEf,UAAY,kBAAoB,GAAnD,SAAwDe,EAAEhB,WAChE,sBAAKW,UAAU,cAAf,UACI,uBAAOG,KAAK,SAAUH,UAAYK,EAAEf,UAAY,qBAAuB,0BAA2BmB,QAAS,SAAAJ,GAAC,OAAI,EAAKN,aAAaY,IAAIJ,MAAOF,EAAEf,UAAY,OAAS,aACpK,uBAAOa,KAAK,SAASH,UAAU,wBAAyBS,QAAS,SAAAJ,GAAC,OAAI,EAAKX,WAAWiB,IAAIJ,MAAM,iBAJ1FI,e,GAvEEC,aCSjBC,MARf,WACE,OACI,8BACA,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36473b9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './todolist.css'\r\n\r\nclass ToDoListComponent extends Component {\r\n    state = { \r\n        addTask : '',\r\n        toDoListItems : []\r\n     }\r\n     addToDoTask = () =>\r\n     {\r\n        if(this.state.addTask === '')\r\n        {\r\n            alert('Please Enter Task')\r\n        }\r\n        else\r\n        {\r\n            // alert(this.state.addTask)\r\n            let listArr = [...this.state.toDoListItems]\r\n            listArr.push({taskName : this.state.addTask, completed : false})\r\n\r\n            this.setState({\r\n                toDoListItems : listArr\r\n            })\r\n        }\r\n\r\n     }\r\n     getToDo = (getData) =>\r\n     {\r\n         this.setState({\r\n             addTask : getData\r\n         })\r\n     }\r\n     taskDelete = (index) =>\r\n     {\r\n        let confirmAlert = window.confirm('Are you sure you want to delete ?')\r\n        if(confirmAlert){\r\n            let listArr = [...this.state.toDoListItems]\r\n            listArr.splice(index,1)\r\n            this.setState({\r\n            toDoListItems : listArr\r\n            })\r\n        }\r\n     }\r\n     taskComplete = (index) =>\r\n     {\r\n\r\n        let listArr = [...this.state.toDoListItems]\r\n        listArr[index].completed = !listArr[index].completed \r\n\r\n\r\n\r\n        this.setState({\r\n            toDoListItems : listArr\r\n        })\r\n     }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"todoContainer\">\r\n                <div className=\"todoTitle\">\r\n                    To Do List \r\n\r\n                    ({this.state.toDoListItems.length})\r\n\r\n\r\n                </div>\r\n                <div className=\"todoInput\" >\r\n                    <input type=\"text\"  className=\"inputText\" onChange={e => this.getToDo(e.target.value)} placeholder=\"Enter To Do\"></input>\r\n                    <input type=\"button\" className=\"inputButton\" onClick={this.addToDoTask} value=\"Add\"/>\r\n                </div>\r\n                <div className=\"listContainer\">\r\n                    {this.state.toDoListItems.map((e,i)=>\r\n                    \r\n                    <div key={i} className=\"list\">\r\n                          <span className={e.completed ? 'strikeCompleted' : ''}>{e.taskName}</span> \r\n                    <div className=\"listButtons\">\r\n                        <input type=\"button\"  className={ e.completed ? 'btnClass undoClass' : 'btnClass completedClass'} onClick={e => this.taskComplete(i)} value={e.completed ? 'Undo' : 'Complete'}></input>\r\n                        <input type=\"button\" className=\"btnClass deletedClass\"  onClick={e => this.taskDelete(i)} value=\"Deleted\"></input>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nexport default ToDoListComponent;","import logo from './logo.svg';\nimport './App.css';\nimport ToDoListComponent from './todolist';\n\nfunction App() {\n  return (\n      <div>\n      <ToDoListComponent/>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}